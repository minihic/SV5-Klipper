[include fluidd.cfg]
[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# This file contains common pin mappings for the BIGTREETECH Manta E3EZ
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PB12/PB13)".;

[include fluidd.cfg]

[exclude_object]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_hurakan-if00
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 550
max_z_velocity: 5
max_z_accel: 100

[stepper_x]
step_pin: PA14
dir_pin: PA10
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_max: 225
position_min: 0
homing_speed: 20
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PB8
diag_pin: ^PC4
driver_SGTHRS: 38
run_current: 0.580
interpolate: True

[stepper_y]
step_pin: PC8
dir_pin: PA15
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -64
position_max: 218
position_min: -64
homing_speed: 20
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC9
diag_pin: ^PB0
driver_SGTHRS: 64
run_current: 0.580
interpolate: True

[stepper_z]
step_pin: PD2
dir_pin: PD4
enable_pin: !PD3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 270
position_min: -3

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.640
stealthchop_threshold: 999999

[extruder]
step_pin: PD5
dir_pin: !PD6
enable_pin: !PB3
microsteps: 16
rotation_distance: 7.7868
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 100.0
heater_pin: PB11 #HE0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4 #TH0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 270
max_extrude_cross_section: 5 # KAMP Setting

[tmc2209 extruder]
uart_pin: PD1
run_current: 0.180
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PB2 #HB
sensor_type: EPCOS 100K B57560G104F #Generic 3950
sensor_pin: PA3 #TB
#control: pid
min_temp: 0
max_temp: 130
#pid_kp = 26.022
#pid_ki = 1.470
#pid_kd = 115.147

[fan]
pin: PA8
max_power: 0.7

[heater_fan board_fan]
pin: PB14

[heater_fan heater_fan]
pin: PB15

[safe_z_home]
home_xy_position: 112, 109
speed: 125
z_hop: 5
z_hop_speed: 20

[bltouch]
sensor_pin: PA6
control_pin: PA7
#z_offset: 0
x_offset: 25
y_offset: 8
samples: 2
samples_tolerance: 0.01
samples_tolerance_retries: 5

[bed_mesh]
speed: 100
horizontal_move_z: 5
mesh_min: 25, 1
mesh_max: 204, 226
probe_count: 5, 5
mesh_pps: 2, 3
algorithm: bicubic
fade_start: 2
fade_end: 10

[screws_tilt_adjust]
screw1: 6, 22
screw1_name: front left screw
screw2: 175, 22
screw2_name: front right screw
screw3: 175, 192
screw3_name: back right screw
screw4: 6, 192
screw4_name: back left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[display]
lcd_type: st7920
cs_pin: PA2
sclk_pin: PA0
sid_pin: PA1
encoder_pins: ^PC0, ^PC3
click_pin: ^!PC2

[pause_resume]

[firmware_retraction]
retract_length: 2
retract_speed: 40
unretract_extra_length: 0.1
unretract_speed: 35

[gcode_macro _POWER_OFF_PRINTER]
gcode:
    RESPOND TYPE=command MSG="Power Off called"
    {action_call_remote_method("set_device_power", device="printer_outlet", state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  M140 S{BED_TEMP} ; set bed temperature and continue without waiting
  G28 ;Home
  RESPOND TYPE=command MSG="Waiting for Bed Heat up"
  M190 S{BED_TEMP} ; set bed temperature and pause until target reached
  M104 S{EXTRUDER_TEMP} ; set hot end temperature and continue without waiting
  RESPOND TYPE=command MSG="Running Bed Mesh Calibrate"
  BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1
  RESPOND TYPE=command MSG="Waiting for Extruder Heat up"
  M109 S{EXTRUDER_TEMP} ; set hot end temperature and pause until target reached
  G21 ; set units to millimeters
  G90 ; use absolute coordinates
  M82 ; use absolute distances for extrusion
  G92 E0
  RESPOND TYPE=command MSG="Start Print"

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    RESPOND TYPE=command MSG="Pause Print"
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 1
variable_etemp: 0
gcode:
    RESPOND TYPE=command MSG="Resume Print"
    # Parameters
    {% set e = params.E|default(0.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    RESPOND TYPE=command MSG="Print Canceled"
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    END_PRINT
    BASE_CANCEL_PRINT

[gcode_macro END_PRINT]
gcode:
  G90 ;Absolute positioning
  G1 Z255
  G1 X225 Y218

  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed

  M84 X Y E ;Disable all steppers but Z

  RESPOND TYPE=command MSG="Print Finished"
  UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=80

[gcode_macro M600]
gcode:
    PAUSE                ; Pause

# Park front center
[gcode_macro PARKFRONT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park front center, but low down.
[gcode_macro PARKFRONTLOW]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park top rear left
[gcode_macro PARKREAR]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F6000     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKBED

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  75
variable_purge_distance:  25
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set speed = params.SPEED|default(100) %}
    SAVE_GCODE_STATE NAME=load_state
    RESPOND TYPE=command MSG="Waiting for extruder heatup"
    M109 S{EXTRUDER_TEMP} ; set hot end temperature and pause until target reached
    G91
    G92 E0
    RESPOND TYPE=command MSG="Loading"
    G1 E{load_distance} F{speed} # fast-load
    M400
    RESPOND TYPE=command MSG="Purging"
    G1 E{purge_distance} F{speed} # purge
    M400
    RESPOND TYPE=command MSG="Done"
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  75
variable_purge_distance:  15
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set speed = params.SPEED|default(180) %}
    SAVE_GCODE_STATE NAME=unload_state
    RESPOND TYPE=command MSG="Waiting for extruder heatup"
    M109 S{EXTRUDER_TEMP} ; set hot end temperature and pause until target reached
    G91
    G92 E0
    RESPOND TYPE=command MSG="Purging"
    G1 E{purge_distance} F50 # purge
    M400
    RESPOND TYPE=command MSG="Unloading"
    G1 E-{unload_distance} F{speed} # fast-unload
    M400
    RESPOND TYPE=command MSG="Done"
    RESTORE_GCODE_STATE NAME=unload_state

# [gcode_macro m205]
# gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.045
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.094
#*# pid_ki = 1.363
#*# pid_kd = 97.863
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 60.931
#*# pid_ki = 0.925
#*# pid_kd = 1003.072
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.120000, -0.032500, -0.052500, -0.048750, 0.038750
#*# 	0.115000, 0.032500, 0.050000, 0.110000, 0.123750
#*# 	0.066250, -0.022500, -0.010000, 0.032500, 0.142500
#*# 	0.045000, -0.032500, 0.000000, 0.037500, 0.132500
#*# 	-0.028750, -0.086250, -0.117500, -0.063750, 0.085000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 204.0
#*# min_y = 1.0
#*# max_y = 226.0
